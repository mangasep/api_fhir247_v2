openapi: "3.0.0"
info:
  version: 2.0.0
  title: FHIR-247
  description: An FHIR API example that uses a methodology to demonstrate features in the OpenAPI 3.0 specification
  termsOfService: http://swagger.io/terms/
  contact:
    name: Developer
    email: danang.kastowo@labs247.id
    # url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://fhir.labs247.id/v2
paths:
  /Patient:
    get:
      tags:
        - Administration
      description: |
        Patient list
      operationId: administration.getPatients
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: minimum number to start
          required: false
          style: form
          schema:
            type: integer
            format: int32
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
        - name: active
          in: query
          description: Whether the patient record is active
          required: false
          schema:
            type: boolean
        - name: address
          in: query
          description: A server defined search that may match any of the string fields in the Address, including line, city, district, state, country, postalCode, and/or text
          required: false
          schema:
            type: string
        - name: address-city
          in: query
          description: A city specified in an address
          required: false
          schema:
            type: string
        - name: address-country
          in: query
          description: A country specified in an address
          required: false
          schema:
            type: string
        - name: address-postalcode
          in: query
          description: A postalCode specified in an address
          required: false
          schema:
            type: string
        - name: address-state
          in: query
          description: A state specified in an address
          required: false
          schema:
            type: string
        - name: address-use
          in: query
          description: A use code specified in an address
          required: false
          schema:
            type: string
        - name: birthdate
          in: query
          description: The patient's date of birth
          required: false
          schema:
            type: string
            format: date
        - name: death-date
          in: query
          description: The date of death has been provided and satisfies this search value
          required: false
          schema:
            type: string
            format: date
        - name: deceased
          in: query
          description: This patient has been marked as deceased, or as a death date entered
          required: false
          schema:
            type: boolean
        - name: email
          in: query
          description: A value in an email contact
          required: false
          schema:
            type: string
            format: email
        - name: family
          in: query
          description: A portion of the family name of the patient
          required: false
          schema:
            type: string
        - name: gender
          in: query
          description: Gender of the patient
          required: false
          schema:
            type: string
        - name: general-practitioner
          in: query
          description: Patient's nominated general practitioner, not the organization that manages the record
          required: false
          schema:
            type: string
        - name: given
          in: query
          description: A portion of the given name of the patient
          required: false
          schema:
            type: string
        - name: identifier
          in: query
          description: A patient identifier
          required: false
          schema:
            type: string
        - name: language
          in: query
          description: Language code (irrespective of use value)
          required: false
          schema:
            type: string
        - name: link
          in: query
          description: All patients linked to the given patient
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: A server defined search that may match any of the string fields in the HumanName, including family, give, prefix, suffix, suffix, and/or text
          required: false
          schema:
            type: string
        - name: organization
          in: query
          description: The organization that is the custodian of the patient record
          required: false
          schema:
            type: string
        - name: phone
          in: query
          description: A value in a phone contact
          required: false
          schema:
            type: string
        - name: telecom
          in: query
          description: The value in any kind of telecom details of the patient
          required: false
          schema:
            type: string

      responses:
        '200':
          description: patient response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Patients'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultMessage'
    post:
      tags:
        - Administration
      description: |
        Create a  new patient
      operationId: administration.addPatient
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
      requestBody:
        description: Create a new patient
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPatient'
      responses:
        '200':
          description: patient response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultMessage'
  /Patient/{id}:
    get:
      tags:
        - Administration
      description: |
        Detailed patient information
      operationId: administration.getPatient
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: patient response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultMessage'
    put:
      tags:
        - Administration
      description: |
        Updated patient information
      operationId: administration.updatePatient
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Create a new patient
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewPatient'
      responses:
        '200':
          description: patient response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultMessage'
    delete:
      tags:
        - Administration
      description: |
        Delete patient information
      operationId: administration.deletePatient
      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
        - name: id
          in: path
          required: true
          schema:
            type: string

      responses:
        '200':
          description: patient response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultMessage'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DefaultMessage'
components:
  schemas:
    Patients:
      allOf:
        - $ref: '#/components/schemas/Patient'
    Patient:
      properties:
        resourceType:
          type: string
          example: Patient
        id:
          type: integer
          format: int64
        meta:
          type: object
          properties:
            lastUpdated:
              type: string
              format: date-time
            versionId:
              type: integer
              format: int64
        text:
          type: object
          properties:
            status:
              type: string
            div:
              type: string
        identifier:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
        active:
          type: boolean
        name:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/HumanName'
        telecom:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ContactPoint'
        gender:
          type: string
        birthDate:
          type: string
          format: date
        deceasedBoolean:
          type: boolean
        deceasedDateTime:
          type: string
          format: date-time
        address:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Address'
        maritalStatus:
          type: object
          properties:
            text:
              type: string
            coding:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                  system:
                    type: string
                  display:
                    type: string
        multipleBirthBoolean:
          type: boolean
        multipleBirthInteger:
          type: integer
        photo:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Attachment'
        contact:
          type: array
          items:
            type: object
            properties:
              relationship:
                type: object
                properties:
                  text:
                    type: string
                  coding:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        system:
                          type: string
                        display:
                          type: string
              name:
                allOf:
                  - $ref: '#/components/schemas/HumanName'
              telecom:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/ContactPoint'
              address:
                allOf:
                  - $ref: '#/components/schemas/Address'
              gender:
                type: string
              organization:
                type: string
        communication:
          type: array
          items:
            type: object
            properties:
              language:
                type: object
                properties:
                  text:
                    type: string
                  coding:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        system:
                          type: string
                        display:
                          type: string
              preferred:
                type: boolean
        generalPractitioner:
          type: array
          items:
            type: object
            properties:
              reference:
                type: string
        managingOrganization:
          type: object
          properties:
            reference:
              type: string
        link:
          type: array
          items:
            type: object
            properties:
              other:
                type: object
              type:
                type: string
    NewPatient:
      properties:
        identifier:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Identifier'
        active:
          type: boolean
        name:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/HumanName'
        telecom:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/ContactPoint'
        gender:
          type: string
          enum:
            - male
            - female
            - other
            - unknown
        birthDate:
          type: string
          format: date
        deceasedBoolean:
          type: boolean
        deceasedDateTime:
          type: string
          format: date-time
        address:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Address'
        maritalStatus:
          type: object
          properties:
            text:
              type: string
            coding:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                  system:
                    type: string
                  display:
                    type: string
        multipleBirthBoolean:
          type: boolean
        multipleBirthInteger:
          type: integer
        photo:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/Attachment'
        contact:
          type: array
          items:
            type: object
            properties:
              relationship:
                type: object
                properties:
                  text:
                    type: string
                  coding:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        system:
                          type: string
                        display:
                          type: string
              name:
                allOf:
                  - $ref: '#/components/schemas/HumanName'
              telecom:
                type: array
                items:
                  allOf:
                    - $ref: '#/components/schemas/ContactPoint'
              address:
                allOf:
                  - $ref: '#/components/schemas/Address'
              gender:
                type: string
                enum:
                  - male
                  - female
                  - other
                  - unknown
              organization:
                type: string
        communication:
          type: array
          items:
            type: object
            properties:
              language:
                type: object
                properties:
                  text:
                    type: string
                  coding:
                    type: array
                    items:
                      type: object
                      properties:
                        code:
                          type: string
                        system:
                          type: string
                        display:
                          type: string
              preferred:
                type: boolean
        generalPractitioner:
          type: array
          items:
            type: object
            properties:
              reference:
                type: string
        managingOrganization:
          type: object
          properties:
            reference:
              type: string
        link:
          type: array
          items:
            type: object
            properties:
              other:
                type: object
              type:
                type: string
    Identifier:
      type: object
      properties:
        use:
          type: string
          enum:
            - usual
            - official
            - temp
            - secondary
            - old
        type:
          type: object
          properties:
            text:
              type: string
            coding:
              type: array
              items:
                type: object
                properties:
                  code:
                    type: string
                  system:
                    type: string
                  display:
                    type: string
        system:
          type: string
        value:
          type: string
    HumanName:
      type: object
      properties:
        use:
          type: string
          enum:
            - usual
            - official
            - temp
            - nickname
            - anonymous
            - old
            - maiden
        text:
          type: string
        family:
          type: string
        given:
          type: array
          items:
            type: string
        prefix:
          type: array
          items:
            type: string
        suffix:
          type: array
          items:
            type: string
    ContactPoint:
      type: object
      properties:
        system:
          type: string
          enum:
            - phone
            - fax
            - email
            - pager
            - url
            - sms
            - other
        value:
          type: string
        use:
          type: string
          enum:
            - home
            - work
            - temp
            - old
            - mobile
        rank:
          type: integer
    Address:
      type: object
      properties:
        use:
          type: string
          enum:
            - home
            - work
            - temp
            - old
            - billing - purpose of this address
        type:
          type: string
          enum:
            - postal
            - physical
            - both
        text:
          type: string
        line:
          type: array
          items:
            type: string
        city:
          type: string
        district:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
    Attachment:
      type: object
      properties:
        contentType:
          type: string
        language:
          type: string
        data:
          type: string
          format: byte
        url:
          type: string
        size:
          type: string
        hash:
          type: string
          format: byte
        title:
          type: string
    DefaultMessage:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string